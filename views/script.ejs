<html lang="ko">
	<head>
		<meta charset="utf-8">
		<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
		<!--<script  src="http://code.jquery.com/jquery-latest.min.js"></script>-->
		<script src="https://kit.fontawesome.com/ad41bee873.js" crossorigin="anonymous"></script>
		<link href="../css/style.css?after" rel="stylesheet" type="text/css">
		<link href="../css/menu.css?after" rel="stylesheet" type="text/css">
		<link href="../css/grid.css?after" rel="stylesheet" type="text/css">
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" crossorigin="anonymous" />
		<title>MYDRIVE</title>

		<script>
			window.onload = function(){
				file_Volume();	// 파일 용량 조회
				fileSelect("Y", "ALL");	// 파일 조회
				closeModal();	//모임만들기 모달 닫기
				document.getElementById('void_btn').disabled = true;

				//우클릭 메뉴 숨기기
				$(document).click(function(){
					$('#gridArea').contents().find(".contextmenu").hide();
				})

				invitedGroup();
			};

			$(document).on('change', '#allUncheck', function(e){
				if($('#allUncheck').is(':checked')){
					$('#gridArea').contents().find('.fileChkBox').prop("checked", true);
					$('#gridArea').contents().find('.fileChkBox').attr("id", "chk_file_Y");
				}else{
					$('#gridArea').contents().find('.fileChkBox').prop("checked", false);
					$('#gridArea').contents().find('.fileChkBox').attr("id", "chk_file");
				}

				fn_setCheckText();
			});

			//체크 갯수 표현
			function fn_setCheckText(){
				var btnAreaType = $('#btnAreaType').val();
				var checkCnt = $('#gridArea').contents().find('.fileChkBox:checked').length;
				$('.checkCnt').html(checkCnt);

				if(checkCnt == 0){
					$('#' + btnAreaType).css('display', 'none');
					$('#allUncheck').prop("checked", false);
				}else{
					$('#' + btnAreaType).css('display', 'inline-block');
					$('#allUncheck').prop("checked", true);
				}
			}

			//파일용량 읽어오기
			function file_Volume(){
				var emplyrSn = $('#emplyrSn').val();

				$.ajax({
					url : "/selectFileVolume",
					type : "POST",
					dataType : "JSON", //"JSON"
					data : {"emplyrSn" : emplyrSn}
				})
				.done(function (res) {
					$("#capacity").text(res[0][0]);        // 사용중 용량
					$("#rest_capacity").text(res[0][3]);   // 남은 용량

					var bar = document.getElementById('bar');
					bar.style.width = res[0][0]/10+'%';           // graph color control = 남은용량 퍼센트
				})
				.fail(function (xhr, textStatus, errorThrown) {
					console.log('selectFileVolume ajax 실패');
				})
			};
			
			/* 정렬기준 변경 이벤트 */
			function selectNayeol(){
				var sortSelect = document.getElementById("sortSbBox");
				var selectValue = sortSelect.options[sortSelect.selectedIndex].value;
				var selectText = sortSelect.options[sortSelect.selectedIndex].text;

				var fileType = $('#gridArea').contents().find('#fileTypeNm').attr('value');

				fileSelect("Y", fileType, selectValue);
			};

			function openMenu(menuNm){
				var gridArea = document.getElementById("gridArea");
				
				document.getElementById("gridArea").src = menuNm;
			};
			
			// 대메뉴, 소메뉴 선택시 클래스 삭제
			function unselected(gbn){
				/* 
				 * 대메뉴 id 명명규칙 : dMenu0, dMenu1..
				 * 소메뉴 id 명명규칙 : sMenu00, sMenu01 (대메뉴 dMenu0아래의 소메뉴) / sMenu10, sMenu11 (대메뉴 dMenu1아래의 소메뉴)
				*/
				// 하드코딩, 메뉴 코드관리?
				for( var i=0; i<4; i++){    //대메뉴 4개
						document.getElementById('dMenu'+i).classList.remove('selected');
					}

				for( var i=0; i<4; i++){    //소메뉴(모든파일) 4개
					document.getElementById('sMenu0'+i).classList.remove('selected');
				}

				for( var i=0; i<1; i++){    //소메뉴(내 그룹) 2개
					document.getElementById('sMenu3'+i).classList.remove('selected');
				}
			};

			// 대메뉴, 소메뉴 선택시 클래스 추가
			function selected(menuId){
				document.getElementById(menuId).classList.add('selected');
			};

			/* 파일 업로드 */
			function fileUpload(){
				$('#fileUpload').click();
			};

			/* 올린 파일 등록 */
			function fileInsert(){
				// debugger;
				var formData = new FormData();
				formData.append('attachment', $('#fileUpload')[0].files[0]);

				$.ajax({
					url : '/uploadFile',
					type:"POST",
					processData : false,
					contentType : false,
					async : false,
					enctype: 'multipart/form-data',
					dataType : "JSON",
					data : formData,
					success:function(result){
						//확장자가 exe일 경우 업로드 제한
						if(result == "exe"){
							alert("exe 파일은 업로드할 수 없습니다!");
						}else{
							alert("업로드가 완료되었습니다.");
						}
						// if ($.browser.msie) {
							// ie 일때 input[type=file] init.
							// $("#fileUpload").replaceWith( $("#filename").clone(true) );
						// } else {
							// other browser 일때 input[type=file] init.
							$("#fileUpload").val("");
							fileSelect("Y", "ALL");
							file_Volume();
						// }
					},
					error:function(e){
						console.log('fileUpload ajax error');
						console.log(e);
					}
				});
			}

			// 파일 조회 
			function fileSelect(useAt, fileType, sortType){
				//iframe 주소가 main이 아닐 경우 수정해주기
				if($('#gridArea').attr('src') != 'main'){
					openMenu('main');
				}

				//휴지통 오픈할 경우 체크박스용 버튼 타입 변경
				if(useAt == "Y"){
					$('#btnAreaType').attr('value', 'checkArea');
					$('#btn_emptyTrash').css('display', 'none');
				}else{
					$('#btnAreaType').attr('value', 'trashArea');
					$('#btn_reUpload').show();
					$('#btn_emptyTrash').css('display', 'inline-block');
				}

				//기존 조회에서 파일 정리하기 메뉴 숨기기
				$('#gridArea').contents().find('#clean_file_menu').hide();
				var emplyrSn = document.getElementById('emplyrSn').value;
				
				//정렬 기준
				var orderBy = "NULL";

				if(sortType == "name"){
					orderBy = "fileNm";
				}else if(sortType == "date"){
					orderBy == "date";
				}

				$.ajax({
					url : "/selectFileList",
					type : "POST",
					dataType : "JSON", //"JSON"
					data : {"emplyrSn" : emplyrSn, "useAt" : useAt, "fileType" : fileType, "orderBy" : orderBy}
				})
				.done(function (res) {
					var dataList = new Array();

					for(var i=0; i<res.length; i++){
						var dataMap = new Map([
							["orginlFileExtsnNm", res[i][11]]
							, ["orginlFileNm", res[i][1]]
							, ["fileExtsnNm", res[i][3]]
							, ["atchmflSn", res[i][8]]
							, ["bkmkAt", res[i][9]]
							, ["useAt", res[i][10]]
							, ["fileNm", res[i][2]]
						]);

						dataList.push(dataMap);
					}

					fn_setFileGrid(dataList, fileType);
				})
				.fail(function (xhr, textStatus, errorThrown) {
					console.log('selectFileList ajax 실패');
					console.log('xhr'+xhr);
					console.log('textStatus'+textStatus);
					console.log('errorThrown'+errorThrown);
				})
			};

			//파일 목록 생성
			function fn_setFileGrid(dlt_fileList, fileType){
				//파일 조회시 체크박스용 버튼 전체 숨김 및 체크박스 해제
				$('#checkArea').css('display', 'none');
				$('#trashArea').css('display', 'none');
				$('#allUncheck').prop("checked", false);

				var fileArea = $('#gridArea').contents().find('#fileList');	//파일목록
				var ListType = $('#gridArea').contents().find('#ListType');	//조회타입
				var fileTypeNm = $('#gridArea').contents().find('#fileTypeNm');	//파일타입 (하단 메뉴 선택시)

				var fileList = "";

				for(var i=0; i<dlt_fileList.length; i++){
					var dma_fileData = dlt_fileList[i];
					var fileSn = dma_fileData.get("atchmflSn");

					//파일타입이 사진이 아닐 경우 아이콘으로 보여주기
					var extsnNm = dma_fileData.get("orginlFileExtsnNm").split("/")[0];
					var fileSrc = "../uploadedFiles/" + dma_fileData.get("orginlFileNm");
					if(extsnNm != "image"){
						fileSrc = "../images/Icon_" + dma_fileData.get("fileExtsnNm") + ".png";
					}

					fileList += '<li class="item_fnc" id="' + fileSn+ '" onclick="view_photoInfo(this)">';
					fileList += '<div class="item_bor">';
					/* ID : IMG_파일일련번호_즐겨찾기추가여부_사용여부 */
					fileList += '<img src="' + fileSrc + '" id="img_' + fileSn + '_' + dma_fileData.get("bkmkAt") + '_' + dma_fileData.get("useAt") + '" class="img_item"/>\n';
					fileList += '<input type="checkbox" id="chk_file" class="fileChkBox"/>';
					//즐겨찾기 여부에 따른 즐겨찾기 버튼 상태 변경
					if(dma_fileData.get("bkmkAt") == "Y"){
						fileList += '<button type="button" id="btn_bkmk_Y" class="btnBkmk fa-solid fa-star" onclick="fn_delFavor('+ fileSn +')"></button>\n';
					}else{
						fileList += '<button type="button" id="btn_bkmk" class="btnBkmk fa-regular fa-star" onclick="fn_addFavor('+ fileSn +')"></button>\n';
					}
					fileList += '<div class="item-name" id="dv_' + fileSn + '"> ' + dma_fileData.get("fileNm") + ' </div>\n';	//파일명
					fileList += '<input type="hidden" id="orgFileNm_' + fileSn + '" value="' + dma_fileData.get("orginlFileNm") + '"></div></li>\n';	//원본파일명
				}

				$(fileArea).html(fileList);      //파일 리스트
				$(ListType).attr('value', "selectList");	//조회타입 설정
				$(fileTypeNm).attr('value', fileType);		//파일타입 설정
			}

			// 환경설정 팝업
			function openWindowPop(url, name){
				var options = 'top=100, left=650, width=790, height=635, status=no, menubar=no, toolbar=no, resizable=no';
				window.open(url, name, options);
			};

			/* 즐겨찾기 조회 */
			function selectBkmk(){
				$('#gridArea').contents().find('#clean_file_menu').hide();
				var emplyrSn = document.getElementById('emplyrSn').value;

				$.ajax({
					url : "/selectBkmkList",
					type : "POST",
					dataType : "JSON", //"JSON"
					data : {"emplyrSn" : emplyrSn}

				})
				.done(function (res) {
					var dataList = new Array();

					for(var i=0; i<res.length; i++){
						var dataMap = new Map([
							["orginlFileExtsnNm", res[i][6]]
							, ["orginlFileNm", res[i][2]]
							, ["fileExtsnNm", res[i][4]]
							, ["atchmflSn", res[i][0]]
							, ["bkmkAt", "Y"]
							, ["useAt", "Y"]
							, ["fileNm", res[i][5]]
						]);

						dataList.push(dataMap);
					}

					fn_setFileGrid(dataList, "ALL");
				})
				.fail(function () {
					console.log('selectBkmkList ajax 실패');
				})
			};

			//파일정리하기
			function cleanUpFiles(){
				$('#gridArea').contents().find('#clean_file_menu').show();
				$('#gridArea').contents().find('#fileNmDup').click();
				$('#gridArea').contents().find('#fileNmDupLi').toggleClass('cleanMenuSelected');
				$('#btnAreaType').attr('value', 'trashArea');
				$('#btn_reUpload').hide();
			}
				
			// 모임만들기 모달 열기
			function openModal() {
				$('.modal_wrap').show();
				$('.next_modal').hide();

				$('#input_group').focus();

				document.getElementById('input_group').value = "";
				document.getElementById('preview_group').src = "";

				document.getElementById('void_btn').disabled = true;
			};

			// 모임만들기 모달 닫기
			function closeModal() {
				$('.modal_wrap').hide();
				$('.next_modal').hide();
				/*
				document.getElementById('input_group').value = "";
				document.getElementById('preview_group').src = "";

				document.getElementById('void_btn').disabled = true;*/
				
				// 메뉴 selected 없애기
				document.getElementById('sMenu30').classList.remove('selected');
			};

			// 모임만들기 완료 모달 열기
			function nextModal(){
				$('.modal_wrap').hide();

				var emplyrSn = $('#emplyrSn').val();
				var groupNm = $('#input_group').val();

				var formData = new FormData();
				formData.append('groupImg', $('#file-input-view102')[0].files[0]);
				formData.append('emplyrSn', emplyrSn);
                formData.append('groupNm', groupNm);
				formData.append('useAt', "Y");
				
				// 이 시점에서 그룹을 만든다.
				$.ajax({
					url : "/insertNewGroup",
					type : "POST",
                    processData : false,
					contentType : false,
					async : false,
					enctype: 'multipart/form-data',
					dataType : "JSON", //"JSON"
                    data : formData,
					success:function(result){
						if(result == "S"){
							$('.next_modal').show();
							$('#input_group').val('');
							mygroup();
						} else {
							alert("새 모임 만들기 중 오류가 발생하였습니다.(ajax성공)");
						}
					},
					error:function(e){
						alert("새 모임 만들기 중 오류가 발생하였습니다.(ajax실패)");
					}
				})
			};

			// 그룹 대표 사진 업로드 전 미리보기(모임만들기)
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        document.getElementById('preview_group').src = e.target.result;
                    };
                    reader.readAsDataURL(input.files[0]);
                } else {
                    document.getElementById('preview_group').src = "";
                }
            }

			// 다음버튼 활성화/비활성화
			function nextBtn(){				
				var input = document.getElementById('input_group').value;
				var nextBtn = document.getElementById('void_btn');

				if(input.length > 0){
					nextBtn.disabled = false;
					if(input.length > 15){
						alert('모임명은 15글자를 초과할 수 없습니다.')
					}
				} else {
					nextBtn.disabled = true;
				}
			};

			// 엔터버튼 클릭시 다음 넘어가게
			function goNext(){
				var input = document.getElementById('input_group').value;

				if(event.keyCode == 13 && input.length > 0){
                    nextModal();
                }
			}

			// '모임가기'버튼 클릭 시 방금 만든 모임으로 이동
			function goCreatedGroup(){
				// 마지막 완료 모달은 삭제
				$('.next_modal').hide();

				// 마지막 그룹 일련번호
				var rowNum = $('#grouplength').val();
				var groupRowId='#add_li_'+(rowNum-1);

				// 일련번호 클릭 이벤트 발생
				$(groupRowId).trigger("click");
			};

			// 사용자마다 내 그룹을 찾아서 메뉴에 추가하여 보여줘야함
			function mygroup(data){
				var emplyrSn = $('#emplyrSn').val();
				
				$.ajax({
					url : "/selectMyGroup",
					type : "POST",
					dataType : "JSON", //"JSON"
					data : {"emplyrSn" : emplyrSn},
					success:function(result){
						// 내 그룹의 갯수 저장
						document.getElementById('grouplength').value = result.length;

						// 조회된 메뉴 나열
						if(result.length > 0){							
							var content = "";

							for(var i=0; i<result.length; i++){
								content += "<li id='add_li_"+i+"' class='add_li'><div class='tree_item'> "+result[i][1]+"</div></li>";
							}

							$('#sub_list').html(content);      // 조회된 사진 리스트
							
						} else if(result.Status == "F"){
							alert("내 그룹 불러오는 도중 오류가 발생하였습니다.");
						}
					},
					error:function(e){
						alert("내 그룹 불러오는 도중 오류가 발생하였습니다.(ajax에러)");
					}
				})
			};

			// 각 그룹 오픈
			$(document).on("click",".add_li", function(){
				var id_check = $(this).attr("id");
				var idNum = id_check.substr(7);
				var emplyrSn = $('#emplyrSn').val();

				var data = {
					"emplyrSn"	: emplyrSn,
					"num"		: idNum
				}
				// 내가 클릭한 그룹의 정보를 갖고와야 함.				
				$.ajax({
					url : "/selectedGouprSn",
					type : "POST",
					dataType : "JSON", //"JSON"
					data : data,
					success:function(result){
						document.getElementById('groupSn').value = result.groupSn;
						document.getElementById('groupNm').value = result.groupNm;
						document.getElementById('emplyrNm').value = result.emplyrNm;
						document.getElementById('emplyrId').value = result.emplyrId;
						openMenu('group');
					},
					error:function(e){
						alert("그룹의 일련번호 조회 도중 오류가 발생하였습니다.(ajax에러)");
					}
				})
			})

			// 그룹 초대로 들어온 경우는 이미 화면 켤때부터 groupSn(groupSn_invite)이 존재
			function invitedGroup(){
				if ($('#groupSn_invite').val() != "" && $('#groupSn_invite').val() != null){
					// 바로 그룹 가입이 되고 , 그룹 화면 표출
					var emplyrSn = $('#emplyrSn').val();
					var groupSn = $('#groupSn_invite').val();

					// 이 시점에서 그룹을 만든다.
					$.ajax({
						url : "/insertInvitedGroup",
						type : "POST",
						dataType : "JSON",
						data : {"emplyrSn" : emplyrSn, "groupSn" : groupSn, "useAt" : "Y"},
						success:function(result){
							console.log('Status: '+result.Status);
							if(result.Status == "S"){
								mygroup();			// 메뉴에 새로 추가된 그룹 표출
								openMenu('group');	// 방금 추가된 그룹을 선택
							} else if(result.Status == "A") {
								alert("이미 가입되어있는 그룹입니다.");
								document.location.href="/index";
							} else if(result.Status == "O") {
								alert("10명초과 시 그룹에 가입 할 수 없습니다.");
							} else {
								alert("초대된 그룹에 가입하는 도중 오류가 발생하였습니다.(ajax성공)");
							}
						},
						error:function(e){
							alert("새 모임 만들기 중 오류가 발생하였습니다.(ajax실패)");
						}
					})
				}			
			}

			//체크박스 파일 다운로드
			function fn_checkFileDownload(){
				var checkFileArr = $('#gridArea').contents().find('.fileChkBox:checked');

				for(var i=0; i < checkFileArr.length; i++){
					var fileId = checkFileArr[i].previousElementSibling.id;
					$('#gridArea').get(0).contentWindow.fn_fileDownload(fileId);
					$('#gridArea').contents().find('#fileDown_a').get(0).click();
				}
			}

			//체크박스 파일 삭제
			function fn_checkFileDelete(useAt){
				var checkFileArr = $('#gridArea').contents().find('.fileChkBox:checked');
				var fileSnArr = [];

				for(var i=0; i< checkFileArr.length; i++){
					fileSnArr.push(checkFileArr[i].previousElementSibling.id.split("_")[1]);
				}

				$('#gridArea').get(0).contentWindow.fn_fileDeleteAjax(useAt, fileSnArr);
			}

			function fn_checkFileDeleteOut(){
				var checkFileArr = $('#gridArea').contents().find('.fileChkBox:checked');
				var fileSnArr = new Array();
				var orgnFilenmArr = new Array();

				for(var i=0; i< checkFileArr.length; i++){
					var fileSn = checkFileArr[i].previousElementSibling.id.split("_")[1];
					fileSnArr.push(fileSn);
					orgnFilenmArr.push($('#gridArea').contents().find('#orgFileNm_'+fileSn).val());
				}

				$('#gridArea').get(0).contentWindow.fn_fileDeleteOutAjax(fileSnArr, orgnFilenmArr);
			}

			function fn_setEmptyTrash(){
				var emplyrSn = $('#emplyrSn').val();
				if(confirm("정말 휴지통을 비우시겠습니까?")){
					$.ajax({
						url : "/deleteAllTrashFile",
						type : "POST",
						dataType : "JSON", //"JSON"
						data : {"sEmplyrSn":emplyrSn},
						success:function(result){
							fileSelect("Y", "ALL");
							file_Volume();
						},
						error:function(e){
							alert("휴지통을 비우던 도중 오류가 발생했습니다.");
						}
					})
				}
			}
		</script>
	</head>