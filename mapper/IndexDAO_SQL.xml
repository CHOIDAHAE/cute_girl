<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IndexDAO">

	<select id="selectFileVolume">
		/* IndexDAO.selectFileVolume */
		SELECT
			NVL(CEIL(SUM(FILE_MG)/100000),0) FILE_MG,
			NVL(CEIL(SUM(DECODE(USE_AT, 'Y', FILE_MG))/100000), 0) FILE_MG_Y,
			NVL(CEIL(SUM(DECODE(USE_AT, 'N', FILE_MG))/100000), 0) FILE_MG_N,
			1000-NVL(CEIL(SUM(FILE_MG)/100000),0) REMAIN
		FROM TCM_ATCHMNFL_DETAIL
		WHERE LAST_UPDUSR_SN = #{emplyrSn}
	</select>

	<select id="selectFileVolume2">
		/* IndexDAO.selectFileVolume2 */
		SELECT
			DECODE(USE_AT, 'Y', EXTSN_NM, 'trash') EXTSN_NM
			, NVL(CEIL(SUM(TAD.FILE_MG)/100000),0) FILE_MG
			, SORT_ORDR
		FROM
		(
			SELECT
				TC.CODE AS EXTSN_NM
				, TAD.FILE_MG
				, NVL(TAD.USE_AT, 'Y') USE_AT
				, DECODE(TAD.USE_AT, 'N', '99', TC.SORT_ORDR) SORT_ORDR
			FROM TCM_CODE TC LEFT OUTER JOIN TCM_ATCHMNFL_DETAIL TAD
			ON (TC.CODE = SUBSTR(ORGINL_FILE_EXTSN_NM, 1, INSTR(ORGINL_FILE_EXTSN_NM, '/', '1', '1')-1)
				AND TAD.LAST_UPDUSR_SN = #{emplyrSn}
			)
			WHERE
				TC.BEST_CODE_TY_NO = 'EXT001'
		) TAD
		GROUP BY DECODE(USE_AT, 'Y', EXTSN_NM, 'trash'), SORT_ORDR
		UNION ALL
		SELECT	/* 남은 용량 */
			'REMAIN' EXTSN_NM
			, 1000-NVL(CEIL(SUM(FILE_MG)/100000),0) REMAIN
			, '999' SORT_ORDR
		FROM
			TCM_ATCHMNFL_DETAIL TAD2
		WHERE
			LAST_UPDUSR_SN = #{emplyrSn}
		UNION ALL
		SELECT
			'MYDRIVE' EXTSN_NM
			, NVL(CEIL(SUM(FILE_MG)/100000),0) REMAIN
			, '999' SORT_ORDR
		FROM
			TCM_ATCHMNFL_DETAIL TAD2
		WHERE
			LAST_UPDUSR_SN = #{emplyrSn}
		ORDER BY SORT_ORDR, EXTSN_NM
	</select>

	<!-- 첨부파일 일련번호 찾아오기 -->
	<select id="selectFileSn">
		/* IndexDAO.selectFileSn */
		SELECT
			TO_NUMBER(NVL(MAX(ATCHMNFL_SN), TO_CHAR(SYSDATE, 'YYYYMMDD') || '00000')) + 1 FILE_SN
		FROM
			TCM_ATCHMNFL_DETAIL
	</select>

	<!-- 첨부파일 등록 -->
	<insert id="insertAtchFileDtl">
		/* IndexDAO.insertAtchFileDtl */
		INSERT INTO TCM_ATCHMNFL_DETAIL
		(
			ATCHMNFL_SN
			, FILE_STRE_COURS_NM
			, ORGINL_FILE_NM
			, FILE_NM
			, FILE_EXTSN_NM
			, FILE_MG
			, DOWN_CO
			, ORGINL_FILE_EXTSN_NM
			, USE_AT
			, FRST_REGISTER_SN
			, FRST_REGIST_DT
			, LAST_UPDUSR_SN
			, LAST_UPDT_DT
		)
		VALUES
		(
			#{fileSn}
			, #{filePath}
			, #{orgFileNm}
			, #{fileNm}
			, #{fileExtsnNm}
			, #{fileSize}
			, 0
			, #{orgFileExtsnNm}
			, 'Y'
			, #{emplyrSn}
			, SYSDATE
			, #{emplyrSn}
			, SYSDATE
		)
	</insert>

	<!--첨부파일 목록 조회-->
	<select id="selectFileList">
		/* IndexDAO.selectFileList */
		SELECT
			tad.FILE_STRE_COURS_NM
			, tad.ORGINL_FILE_NM
			, tad.FILE_NM
			, tad.FILE_EXTSN_NM
			, tad.FILE_MG
			, tad.DOWN_CO
			, tad.FRST_REGIST_DT
			, tad.FRST_REGISTER_SN 
			, tad.ATCHMNFL_SN
			, DECODE(TEB.ATCHMNFL_SN, '', 'N', 'Y') BKMK_AT
			, tad.USE_AT
			, tad.ORGINL_FILE_EXTSN_NM
		FROM
			TCM_ATCHMNFL_DETAIL tad
			, TCM_EMPLYRBY_BKMK TEB 
		WHERE
			TAD.ATCHMNFL_SN  = TEB.ATCHMNFL_SN(+)
			AND TAD.USE_AT = #{useAt}
			AND TAD.FRST_REGISTER_SN = #{emplyrSn}
			AND (ORGINL_FILE_EXTSN_NM LIKE #{fileType}||'%' OR #{fileType} = 'ALL')
		<if test='orderBy == "fileMg"'>
			ORDER BY TAD.FILE_MG DESC
		</if>
		<if test='orderBy == "fileNm"'>
			ORDER BY TAD.FILE_NM
		</if>
		<if test='orderBy == "date"'>
			ORDER BY TAD.FRST_REGIST_DT
		</if>
	</select>

	<!--첨부파일 상세정보 조회-->
	<select id="selectFileDtlData">
		/* IndexDAO.selectFileDtlData */
		SELECT
			FILE_NM
			, FILE_STRE_COURS_NM 
			, FILE_EXTSN_NM 
			, FILE_MG 
			, DOWN_CO 
			, ORGINL_FILE_NM
		FROM TCM_ATCHMNFL_DETAIL TAD
		WHERE
			ATCHMNFL_SN  = #{AtchfileSn}
	</select>

	<!-- 파일 휴지통으로 이동 / 복원 -->
	<update id="updateFileUseAt">
		/* IndexDAO.updateFileUseAt */
		UPDATE TCM_ATCHMNFL_DETAIL
		SET
			USE_AT = #{useAt},
			LAST_UPDT_DT = SYSDATE,
			LAST_UPDUSR_SN = #{emplyrSn}
		WHERE 
			ATCHMNFL_SN = #{AtchfileSn}
	</update>

	<!-- 그룹파일 삭제 -->
	<delete id="deleteGroupFile">
		/* IndexDAO.deleteGroupFile */
		DELETE TCM_GROUP_FILE
		WHERE FILE_SN = #{AtchfileSn}
		AND EMPLYR_SN = #{emplyrSn}
	</delete>

	<!-- 파일 완전히 삭제 -->
	<delete id="deleteFileUseAtDtl">
		/* IndexDAO.deleteFileUseAtDtl */
		DELETE TCM_ATCHMNFL_DETAIL
		WHERE ATCHMNFL_SN = #{AtchfileSn}
	</delete>

	<!-- 첨부파일 즐겨찾기 추가 -->
	<insert id="insertBmFavorite">
		/* IndexDAO.insertBmFavorite */
		INSERT INTO TCM_EMPLYRBY_BKMK
		(
			EMPLYR_SN,
			ATCHMNFL_SN,
			FRST_REGISTER_SN,
			FRST_REGIST_DT,
			LAST_UPDUSR_SN,
			LAST_UPDT_DT
		)
		VALUES
		(
			#{sEmplyrSn},
			#{atchmnflSn},
			#{sEmplyrSn},
			SYSDATE,
			#{sEmplyrSn},
			SYSDATE
		)
	</insert>

	<!-- 첨부파일 즐겨찾기 삭제 -->
	<delete id="deleteBmFavorite">
		/* IndexDAO.deleteBmFavorite */
		DELETE FROM TCM_EMPLYRBY_BKMK
		WHERE EMPLYR_SN = #{sEmplyrSn}
		AND ATCHMNFL_SN = #{atchmnflSn}
	</delete>

	<!--즐겨찾기 목록 조회-->
	<select id="selectBkmkList">
		/* IndexDAO.selectBkmkList */
		SELECT
			TAD.ATCHMNFL_SN
			, TAD.FILE_STRE_COURS_NM 
			, TAD.ORGINL_FILE_NM 
			, TAD.FILE_MG 
			, TAD.FILE_EXTSN_NM 
			, TAD.FILE_NM 
			, TAD.ORGINL_FILE_EXTSN_NM
		FROM
			TCM_ATCHMNFL_DETAIL TAD		/* 첨부파일 상세 */
			, TCM_EMPLYRBY_BKMK TEB		/* 즐겨찾기 */
		WHERE
			TAD.ATCHMNFL_SN = TEB.ATCHMNFL_SN
			AND TAD.USE_AT = 'Y'
			AND TEB.EMPLYR_SN = #{sEmplyrSn}

	</select>

	<!-- 첨부파일명 수정 -->
	<update id="updateFileNm">
		/* IndexDAO.updateFileNm */
		UPDATE TCM_ATCHMNFL_DETAIL		/* 첨부파일 상세 */
		SET FILE_NM = #{fileNm}
			, LAST_UPDT_DT = SYSDATE
			, LAST_UPDUSR_SN = #{sEmplyrSn}
		WHERE
			ATCHMNFL_SN = #{atchmnflSn}
	</update>

	<!-- 파일 자동삭제 정보 조회 -->
	<select id="selectAutoFileInfo">
		/* IndexDAO.selectAutoFileInfo */
		SELECT AUTO_DELETE_INFO
		FROM TCM_EMPLYR
		WHERE EMPLYR_SN = #{sEmplyrSn}
	</select>

	<!-- 파일 자동삭제 정보 수정 -->
	<update id="updateAutoFileInfo">
		/* IndexDAO.updateAutoFileInfo */
		UPDATE TCM_EMPLYR		/* 사용자 */
		SET AUTO_DELETE_INFO = #{autoDeleteInfo}
			, LAST_UPDUSR_SN = #{sEmplyrSn}
			, LAST_UPDT_DT = SYSDATE
		WHERE EMPLYR_SN = #{sEmplyrSn}
	</update>

	<!-- 파일 자동삭제 (현재 안 쓰는 쿼리)-->
	<select id="selectAutoFileTest">
		<![CDATA[
		/* IndexDAO.selectAutoFileTest */
		SELECT * FROM TCM_ATCHMNFL TA		/* 첨부파일 */
		WHERE FRST_REGISTER_SN = #{sEmplyrSn}
		AND FRST_REGIST_DT < SYSDATE - 
			(
				SELECT AUTO_DELETE_INFO
				FROM TCM_EMPLYR
				WHERE EMPLYR_SN = #{sEmplyrSn}
			)
		]]>
	</select>

	<!-- 파일 자동 삭제(휴지통으로 이동) -->
	<update id="deleteAutoFile">
		/* IndexDAO.deleteAutoFile */
		<![CDATA[
		UPDATE TCM_ATCHMNFL_DETAIL
		SET
			USE_AT = 'N',
			LAST_UPDT_DT = SYSDATE,
			LAST_UPDUSR_SN = #{sEmplyrSn}
		WHERE FRST_REGISTER_SN = #{sEmplyrSn}
		AND FRST_REGIST_DT < SYSDATE - 
			(
				SELECT AUTO_DELETE_INFO
				FROM TCM_EMPLYR
				WHERE EMPLYR_SN = #{sEmplyrSn}
			)
		]]>
	</update>

	<!-- 파일 자동삭제 
	<delete id="deleteAutoFileDtl">
		<![CDATA[
		/* IndexDAO.deleteAutoFileDtl */
		DELETE FROM TCM_ATCHMNFL_DETAIL TAD		/* 첨부파일 상세 */
		WHERE FRST_REGISTER_SN = #{sEmplyrSn}
		AND FRST_REGIST_DT < SYSDATE - 
			(
				SELECT AUTO_DELETE_INFO
				FROM TCM_EMPLYR
				WHERE EMPLYR_SN = #{sEmplyrSn}
			)
			]]>
	</delete>
	-->

	<!-- 파일명 중복 리스트 조회 -->
	<select id="selectDupList">
		<![CDATA[
		/* IndexDAO.selectDupList */
		SELECT *
		FROM (
			SELECT
					tad.FILE_STRE_COURS_NM
					, tad.ORGINL_FILE_NM
					, tad.FILE_NM
					, tad.FILE_EXTSN_NM
					, tad.FILE_MG
					, tad.ATCHMNFL_SN
					, COUNT(FILE_NM) OVER(PARTITION BY FILE_NM) CNT
					, tad.ORGINL_FILE_EXTSN_NM
					, tad.FRST_REGIST_DT
					, tad.FRST_REGISTER_SN
				FROM
					TCM_ATCHMNFL_DETAIL tad
					, TCM_EMPLYRBY_BKMK TEB 
				WHERE
					TAD.ATCHMNFL_SN  = TEB.ATCHMNFL_SN(+)
					AND TAD.USE_AT = 'Y'
					AND TAD.FRST_REGISTER_SN = #{sEmplyrSn}
		) A
		WHERE A.CNT > 1
		]]>
	</select>
</mapper>