<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GroupDAO">
    <select id="selectGroupSn">
        SELECT
            NVL(MAX(AUTHOR_GROUP_SN) + 1,1) AS AUTHOR_GROUP_SN
        FROM
            TCM_AUTHOR_GROUP
        WHERE
            ROWNUM = 1
    </select>

    <insert id="insertNewGroup">
        INSERT INTO TCM_AUTHOR_GROUP
		(
			AUTHOR_GROUP_SN,
			AUTHOR_GROUP_NM,
			USE_AT,
			GROUP_LEADER_SN,
			FRST_REGISTER_SN,
			FRST_REGIST_DT,
			LAST_UPDUSR_SN,
			LAST_UPDT_DT
		) 
		VALUES
		(
			#{groupSn},
			#{groupNm},
			#{useAt},
			#{emplyrSn},
			#{emplyrSn},
			SYSDATE,
			#{emplyrSn},
			SYSDATE
		)
    </insert>

	<!-- 그룹 가입하기 -->
	<insert id="insertPersonalGroup">
		INSERT INTO TCM_EMPLYRBY_GROUP_AUTHOR
			(
				EMPLYR_SN,
				AUTHOR_GROUP_SN,
				FRST_REGISTER_SN,
				FRST_REGIST_DT,
				LAST_UPDUSR_SN,
				LAST_UPDT_DT
			) 
			VALUES
			(
				#{emplyrSn},
				#{groupSn},
				#{emplyrSn},
				SYSDATE,
				#{emplyrSn},
				SYSDATE
			)
	</insert>

	<!-- 그룹 가입 여부 확인 -->
	<select id="groupJoinAt">
		SELECT
			COUNT(*) CNT
		FROM
			TCM_EMPLYRBY_GROUP_AUTHOR
		WHERE
			EMPLYR_SN		= #{emplyrSn}
		AND AUTHOR_GROUP_SN	= #{groupSn}
	</select>

	<!-- 내 그룹 리스트 -->
	<select id="selectMyGroup">
        SELECT
			PERSONAL.AUTHOR_GROUP_SN GROUP_SN,	--그룹일련번호
			GRP.AUTHOR_GROUP_NM GROUP_NM		--그룹명
		FROM
			TCM_EMPLYRBY_GROUP_AUTHOR PERSONAL, TCM_AUTHOR_GROUP GRP
		WHERE
			PERSONAL.AUTHOR_GROUP_SN = GRP.AUTHOR_GROUP_SN
		AND GRP.USE_AT = 'Y'
		AND	PERSONAL.EMPLYR_SN = #{emplyrSn}
		ORDER BY
			PERSONAL.AUTHOR_GROUP_SN
    </select>

	<!-- 멤버 -->
	<select id="selectGropMember">
		SELECT
			GRP.AUTHOR_GROUP_SN,
			EMP.EMPLYR_SN,
			EMP.NICKNAME,
			TAG.AUTHOR_GROUP_NM,
			EMP.PROFILE_IMG
		FROM
			TCM_EMPLYRBY_GROUP_AUTHOR GRP,
			TCM_EMPLYR EMP,
			TCM_AUTHOR_GROUP TAG
		WHERE GRP.EMPLYR_SN = EMP.EMPLYR_SN
		AND TAG.AUTHOR_GROUP_SN = GRP.AUTHOR_GROUP_SN
		AND GRP.AUTHOR_GROUP_SN = #{groupSn}
		ORDER BY GRP.FRST_REGISTER_SN
	</select>

	<!-- 그룹 사용 여부 업데이트 (마지막 사용자인 경우 그룹삭제) -->
	<update id="updateGroupUseAt">
		UPDATE
			TCM_AUTHOR_GROUP
		SET
			USE_AT = 'N',
			LAST_UPDUSR_SN = #{emplyrSn},
			LAST_UPDT_DT = SYSDATE
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
	</update>

	<!-- 현재 클릭한 모임의 정보 구하기 -->
	<select id="selectedGouprSn">
		SELECT	
			A.GROUP_SN,
			A.GROUP_NM,
			EMP.EMPLYR_NM,
			EMP.EMPLYR_ID
		FROM (
			SELECT	
					ROWNUM-1 NUM,
					PERSONAL.AUTHOR_GROUP_SN GROUP_SN,	--그룹일련번호
					GRP.AUTHOR_GROUP_NM GROUP_NM,		--그룹명
					EMPLYR_SN
				FROM
					TCM_EMPLYRBY_GROUP_AUTHOR PERSONAL,
					TCM_AUTHOR_GROUP GRP
				WHERE
					PERSONAL.AUTHOR_GROUP_SN = GRP.AUTHOR_GROUP_SN
				AND GRP.USE_AT = 'Y'
				AND	PERSONAL.EMPLYR_SN = #{emplyrSn}
				ORDER BY
					PERSONAL.AUTHOR_GROUP_SN
					) A,
			TCM_EMPLYR EMP
		WHERE EMP.EMPLYR_SN = A.EMPLYR_SN
		AND NUM = #{num}
	</select>

	<!-- 모임(그룹) 나가기 -->
	<delete id="outGroup">
		DELETE FROM 
			TCM_EMPLYRBY_GROUP_AUTHOR
		WHERE 
			EMPLYR_SN = #{emplyrSn}
		AND AUTHOR_GROUP_SN = #{groupSn}
	</delete>

	<!-- 그룹 내 파일 삭제하기 -->
	<delete id="deleteGroupFile">
		DELETE FROM
			TCM_GROUP_FILE
		WHERE
			EMPLYR_SN = #{emplyrSn}
		AND AUTHOR_GROUP_SN = #{groupSn}
		<if test='fileSn != "" && fileSn != null'>
			AND FILE_SN = #{fileSn}
		</if>
	</delete>

	<!-- 그룹의 인원수 조회 -->
	<select id="selecteGoupCnt">
		SELECT
			COUNT(EMPLYR_SN) CNT
		FROM
			TCM_EMPLYRBY_GROUP_AUTHOR
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
	</select>

	<!-- 리더여부 조회 -->
	<select id="selecteLeaderYn">
		SELECT
			NVL2(MIN(GROUP_LEADER_SN), 'Y', 'N') LEADER_AT
		FROM
			TCM_AUTHOR_GROUP
		WHERE
			GROUP_LEADER_SN = #{emplyrSn}
		AND AUTHOR_GROUP_SN = #{groupSn}
	</select>

	<!-- 등록일자 순으로 다음 리더 조회 -->
	<select id="selecteNextLeader">
		SELECT
			NVL(MIN(EMPLYR_SN), 'N') NEXT_LEADER_SN	--없으면N, 존재하면 일련번호
		FROM (
			SELECT
				ROWNUM RNUM,
				EMPLYR_SN,
				AUTHOR_GROUP_SN,
				FRST_REGISTER_SN,
				FRST_REGIST_DT,
				LAST_UPDUSR_SN,
				LAST_UPDT_DT
			FROM
				TCM_EMPLYRBY_GROUP_AUTHOR
			WHERE AUTHOR_GROUP_SN = #{groupSn}
			ORDER BY FRST_REGIST_DT
			)
		WHERE RNUM = 2
	</select>

	<!-- 그룹 리더 수정 -->
	<update id="updateGroupLeader">
		UPDATE
			TCM_AUTHOR_GROUP
		SET
			GROUP_LEADER_SN = #{nextLeaderSn},
			LAST_UPDUSR_SN = #{emplyrSn},
			LAST_UPDT_DT = SYSDATE
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
	</update>

	<!-- 그룹명 수정 -->
	<update id="updateGroupNm">
		UPDATE
			TCM_AUTHOR_GROUP		--공유그룹
		SET 
			AUTHOR_GROUP_NM	= #{data},
			LAST_UPDUSR_SN	= #{emplyrSn},
			LAST_UPDT_DT	= SYSDATE
		WHERE
			AUTHOR_GROUP_SN	= #{groupSn}
	</update>

	<!-- 그룹파일 일련번호 찾아오기 -->
	<select id="selectFileSn">
		/* GroupDAO.selectFileSn */
		SELECT
			TO_NUMBER(NVL(MAX(FILE_SN), TO_CHAR(SYSDATE, 'YYYYMMDD') || '00000')) + 1 FILE_SN
		FROM
			TCM_GROUP_FILE
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
	</select>

	<!-- 그룹 파일 등록 -->
	<insert id="insertGroupFile">
		/* IndexDAO.insertGroupFile */
		INSERT INTO TCM_GROUP_FILE
		(
			EMPLYR_SN,
			AUTHOR_GROUP_SN,
			FILE_SN,
			MAIN_FILE_AT,
			FILE_STRE_COURS_NM,	--파일저장경로명
			ORGINL_FILE_NM,		--원본파일명
			ORGINL_FILE_EXTSN_NM,
			FRST_REGIST_DT,
			FRST_REGISTER_SN,
			LAST_UPDT_DT,
			LAST_UPDUSR_SN
		)
		VALUES
		(
			#{emplyrSn},
			#{groupSn},
			#{fileSn},
			#{mainFileAt},
			#{filePath},
			#{orgFileNm},
			#{orgFileExtsnNm},
			SYSDATE,
			#{emplyrSn},
			SYSDATE,
			#{emplyrSn}
		)
	</insert>

	<!-- 타임라인에 등록 -->
	<insert id="insertTimeline">
        INSERT INTO TCM_TIMELINE
		(
			TIMELINE_SN,
			AUTHOR_GROUP_SN,
			TIMELINE_DC,
			TYPE,
			FILE_SN,
			EMPLYR_SN,
			FRST_REGISTER_SN,
			FRST_REGIST_DT,
			LAST_UPDUSR_SN,
			LAST_UPDT_DT
		) 
		VALUES
		(
			(SELECT NVL(MAX(TIMELINE_SN), 0) +1 TIMELINE_SN FROM TCM_TIMELINE LINE WHERE LINE.AUTHOR_GROUP_SN = #{groupSn}),
			#{groupSn},
			#{timelineDc},
			#{type},
			#{fileSn},
			#{emplyrSn},
			#{emplyrSn},
			SYSDATE,
			#{emplyrSn},
			SYSDATE
		)
    </insert>

	<!-- 댓글 등록 -->
	<insert id="insertComment">
        INSERT INTO TCM_COMMENT
		(
			COMMENT_SN,
			TIMELINE_SN,
			AUTHOR_GROUP_SN,
			COMMENT_DC,
			FRST_REGISTER_SN,
			FRST_REGIST_DT
		) 
		VALUES
		(
			(SELECT
				NVL(MAX(COMMENT_SN), 0) +1 COMMENT_SN 
			FROM
				TCM_COMMENT COMM 
			WHERE
				COMM.AUTHOR_GROUP_SN = #{groupSn} 
			AND COMM.TIMELINE_SN = #{timelineSn}),
			#{timelineSn},
			#{groupSn},
			#{commentDc},
			#{emplyrSn},
			SYSDATE
		)
    </insert>

	<!-- 전체 타임라인 갯수 조회 -->
	<select id="selectTimelineSn">
		SELECT
			TIMELINE_SN
		FROM
			TCM_TIMELINE
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
	</select>

	<!-- 모임 나가기 시 타임라인 삭제(그룹의 내가 올린 타임라인) -->
	<delete id="deleteTimeline">
		DELETE FROM		
			TCM_TIMELINE
		WHERE
			AUTHOR_GROUP_SN	= #{groupSn}
		AND	EMPLYR_SN		= #{emplyrSn}
		<if test='timelineSn != ""'>
			AND TIMELINE_SN		= #{timelineSn}
		</if>
	</delete>

	<!-- 댓글 조회 -->
	<select id="selectComment">
		SELECT
			COMM.COMMENT_SN,
			COMM.TIMELINE_SN,
			COMM.COMMENT_DC,
			to_char(COMM.FRST_REGIST_DT, 'FMmm')			
			|| '월' ||
			to_char(COMM.FRST_REGIST_DT, 'FMdd')
			|| '일 ' ||
			to_char(COMM.FRST_REGIST_DT, 'FMAM hh')
			|| ':' || to_char(COMM.FRST_REGIST_DT, 'mm')
			|| ' ' ||
			TO_CHAR(COMM.FRST_REGIST_DT, 'dy') DAY,
			EMP.EMPLYR_NM,
			EMP.EMPLYR_SN,
			EMP.NICKNAME,
			EMP.PROFILE_IMG
		FROM
			TCM_COMMENT COMM,
			TCM_EMPLYR EMP
		WHERE
			COMM.FRST_REGISTER_SN = EMP.EMPLYR_SN
		AND	COMM.AUTHOR_GROUP_SN = #{groupSn}
		<if test='timelineSn != ""'>
			AND	COMM.TIMELINE_SN = #{timelineSn}
		</if>
		ORDER BY COMM.TIMELINE_SN, COMMENT_SN
	</select>

	<!-- 댓글 삭제 -->
	<delete id="deleteComment">
		DELETE FROM
			TCM_COMMENT
		WHERE
			TIMELINE_SN = #{timelineSn}
		<if test='commentSn != ""'>
		AND COMMENT_SN = #{commentSn}
		</if>
		AND AUTHOR_GROUP_SN = #{groupSn}
	</delete>

	<!-- 그룹 정보 조회 -->
	<select id="selectGroupInfo">
		SELECT
			GRP.AUTHOR_GROUP_NM,
			TO_CHAR(GRP.FRST_REGIST_DT, 'YYYY.MM.DD') FRST_REGIST_DT,
			EMP.EMPLYR_NM || '(' || EMP.EMPLYR_ID || ')' LEADER_NM,
			EMP.NICKNAME
		FROM
			TCM_AUTHOR_GROUP GRP,
			TCM_EMPLYR EMP
		WHERE
			GRP.GROUP_LEADER_SN = EMP.EMPLYR_SN
		AND GRP.AUTHOR_GROUP_SN = #{groupSn}
	</select>

	<!-- 그룹 대표사진 조회 -->
	<select id="selectTopPicture">
		SELECT
			ORGINL_FILE_NM
		FROM
			TCM_GROUP_FILE
		WHERE
			AUTHOR_GROUP_SN = #{groupSn}
		AND MAIN_FILE_AT = 'Y'
	</select>

	<!-- 기존 그룹 대표사진 삭제 -->
	<delete id="deleteTopPicture">
		DELETE FROM
			TCM_GROUP_FILE
		WHERE	
			MAIN_FILE_AT = 'Y'
		AND AUTHOR_GROUP_SN = #{groupSn}
	</delete>

	<!-- 그룹 업로드용 모든 사진 조회 -->
	<select id="selectPictureList">
		SELECT 
			TAD.ATCHMNFL_SN,
			TAD.FILE_STRE_COURS_NM,
			TAD.ORGINL_FILE_NM,
			TAD.FILE_NM,
			(SELECT TGF.AUTHOR_GROUP_SN
				FROM TCM_GROUP_FILE TGF
				WHERE TAD.FRST_REGISTER_SN = TGF.EMPLYR_SN
				AND TAD.ATCHMNFL_SN = TGF.FILE_SN
				AND TGF.AUTHOR_GROUP_SN = #{groupSn}
				AND MAIN_FILE_AT = 'N') AUTHOR_GROUP_SN
		FROM
			TCM_ATCHMNFL_DETAIL TAD
		WHERE
			TAD.FRST_REGISTER_SN = #{emplyrSn}
		AND TAD.USE_AT = 'Y'
		AND TAD.ORGINL_FILE_EXTSN_NM LIKE #{popType}||'%'
	</select>

	<!-- 그룹 업로드용 즐겨찾기 사진 조회 -->
	<select id="selectBkmkPictureList">
		SELECT 
			TAD.ATCHMNFL_SN,
			TAD.FILE_STRE_COURS_NM,
			TAD.ORGINL_FILE_NM,
			TAD.FILE_NM,
			(SELECT TGF.AUTHOR_GROUP_SN
				FROM TCM_GROUP_FILE TGF
				WHERE TAD.FRST_REGISTER_SN = TGF.EMPLYR_SN
				AND TAD.ATCHMNFL_SN = TGF.FILE_SN
				AND TGF.AUTHOR_GROUP_SN = '11'
				AND MAIN_FILE_AT = 'N') AUTHOR_GROUP_SN
		FROM
			TCM_ATCHMNFL_DETAIL TAD,
			TCM_EMPLYRBY_BKMK BKMK
		WHERE
			TAD.ATCHMNFL_SN = BKMK.ATCHMNFL_SN
		AND	TAD.FRST_REGISTER_SN = #{emplyrSn}
		AND TAD.USE_AT = 'Y'
		AND TAD.ORGINL_FILE_EXTSN_NM LIKE #{popType}||'%'
	</select>

	<!-- 그룹 업로드 시 해당 파일의 상세조회 -->
	<select id="picturesForUpload">
		SELECT
			ATCHMNFL_SN,
			FILE_STRE_COURS_NM,
			ORGINL_FILE_NM,
			ORGINL_FILE_EXTSN_NM
		FROM
			TCM_ATCHMNFL_DETAIL
		WHERE
			ATCHMNFL_SN  = #{fileSn}
		AND FRST_REGISTER_SN = #{emplyrSn}
	</select>

	<!-- 그룹사진 조회 -->
	<select id="selectForGroup">
		SELECT
			PIC.FILE_SN,
			PIC.FILE_STRE_COURS_NM,
			PIC.ORGINL_FILE_NM,
			EMP.EMPLYR_NM || '(' || EMP.EMPLYR_ID || ')',
			to_char(LINE.FRST_REGIST_DT, 'FMmm')			
			|| '월' ||
			to_char(LINE.FRST_REGIST_DT, 'FMdd')
			|| '일 ' ||
			to_char(LINE.FRST_REGIST_DT, 'FMAM hh')
			|| ':' || to_char(LINE.FRST_REGIST_DT, 'mm')
			|| ' ' ||
			TO_CHAR(LINE.FRST_REGIST_DT, 'dy'),
			NVL(LINE.TIMELINE_DC, '') TIMELINE_DC,
			LINE.TYPE,
			LINE.FRST_REGISTER_SN,
			EMP.EMPLYR_NM,
			LINE.TIMELINE_SN,
			EMP.NICKNAME,
			EMP.PROFILE_IMG
		FROM
			TCM_GROUP_FILE PIC,
			TCM_TIMELINE LINE,
			TCM_EMPLYR EMP
		WHERE
			LINE.EMPLYR_SN = EMP.EMPLYR_SN
		AND LINE.EMPLYR_SN = PIC.EMPLYR_SN(+)
		AND LINE.AUTHOR_GROUP_SN = PIC.AUTHOR_GROUP_SN(+)
		AND LINE.FILE_SN = PIC.FILE_SN(+)
		AND	LINE.AUTHOR_GROUP_SN = #{groupSn}
		AND PIC.MAIN_FILE_AT(+) = 'N'
		ORDER BY LINE.TIMELINE_SN DESC
	</select>

</mapper>